package stdgo.math.bits_test;
import stdgo.StdGoTypes;
import stdgo.Error;
import stdgo.Go;
import stdgo.GoString;
import stdgo.Pointer;
import stdgo.Slice;
import stdgo.GoArray;
import stdgo.GoMap;
import stdgo.Chan;
var _tests : Slice<stdgo.testing.Testing.InternalTest> = ((new Slice<stdgo.testing.Testing.InternalTest>(
((new stdgo.testing.Testing.InternalTest(((((("TestUintSize" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testUintSize) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestLeadingZeros" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testLeadingZeros) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestTrailingZeros" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testTrailingZeros) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestOnesCount" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testOnesCount) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestRotateLeft" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testRotateLeft) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestReverse" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testReverse) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestReverseBytes" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testReverseBytes) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestLen" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testLen) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestAddSubUint" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testAddSubUint) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestAddSubUint32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testAddSubUint32) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestAddSubUint64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testAddSubUint64) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestAdd64OverflowPanic" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testAdd64OverflowPanic) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestSub64OverflowPanic" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testSub64OverflowPanic) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestMulDiv" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testMulDiv) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestMulDiv32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testMulDiv32) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestMulDiv64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testMulDiv64) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestDivPanicOverflow" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testDivPanicOverflow) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestDiv32PanicOverflow" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testDiv32PanicOverflow) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestDiv64PanicOverflow" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testDiv64PanicOverflow) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestDivPanicZero" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testDivPanicZero) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestDiv32PanicZero" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testDiv32PanicZero) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestDiv64PanicZero" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testDiv64PanicZero) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestRem32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testRem32) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestRem32Overflow" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testRem32Overflow) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestRem64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testRem64) : stdgo.testing.Testing.InternalTest)),
((new stdgo.testing.Testing.InternalTest(((((("TestRem64Overflow" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.testRem64Overflow) : stdgo.testing.Testing.InternalTest))) : Slice<stdgo.testing.Testing.InternalTest>));
var _benchmarks : Slice<stdgo.testing.Testing.InternalBenchmark> = ((new Slice<stdgo.testing.Testing.InternalBenchmark>(
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkLeadingZeros" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkLeadingZeros) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkLeadingZeros8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkLeadingZeros8) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkLeadingZeros16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkLeadingZeros16) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkLeadingZeros32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkLeadingZeros32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkLeadingZeros64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkLeadingZeros64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkTrailingZeros" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkTrailingZeros) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkTrailingZeros8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkTrailingZeros8) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkTrailingZeros16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkTrailingZeros16) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkTrailingZeros32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkTrailingZeros32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkTrailingZeros64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkTrailingZeros64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkOnesCount" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkOnesCount) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkOnesCount8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkOnesCount8) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkOnesCount16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkOnesCount16) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkOnesCount32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkOnesCount32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkOnesCount64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkOnesCount64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkRotateLeft" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkRotateLeft) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkRotateLeft8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkRotateLeft8) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkRotateLeft16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkRotateLeft16) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkRotateLeft32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkRotateLeft32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkRotateLeft64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkRotateLeft64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverse" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverse) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverse8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverse8) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverse16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverse16) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverse32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverse32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverse64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverse64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverseBytes" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverseBytes) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverseBytes16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverseBytes16) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverseBytes32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverseBytes32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkReverseBytes64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkReverseBytes64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkAdd" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkAdd) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkAdd32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkAdd32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkAdd64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkAdd64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkAdd64multiple" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkAdd64multiple) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkSub" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkSub) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkSub32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkSub32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkSub64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkSub64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkSub64multiple" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkSub64multiple) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkMul" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkMul) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkMul32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkMul32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkMul64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkMul64) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkDiv" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkDiv) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkDiv32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkDiv32) : stdgo.testing.Testing.InternalBenchmark)),
((new stdgo.testing.Testing.InternalBenchmark(((((("BenchmarkDiv64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.benchmarkDiv64) : stdgo.testing.Testing.InternalBenchmark))) : Slice<stdgo.testing.Testing.InternalBenchmark>));
var _fuzzTargets : Slice<stdgo.testing.Testing.InternalFuzzTarget> = ((new Slice<stdgo.testing.Testing.InternalFuzzTarget>() : Slice<stdgo.testing.Testing.InternalFuzzTarget>));
var _examples : Slice<stdgo.testing.Testing.InternalExample> = ((new Slice<stdgo.testing.Testing.InternalExample>(
((new stdgo.testing.Testing.InternalExample(((((("ExampleAdd32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleAdd32, ((((("[33 12] + [21 23] = [54 35] (carry bit was 0)\n[1 2147483648] + [1 2147483648] = [3 0] (carry bit was 1)\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleAdd64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleAdd64, ((((("[33 12] + [21 23] = [54 35] (carry bit was 0)\n[1 9223372036854775808] + [1 9223372036854775808] = [3 0] (carry bit was 1)\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleSub32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleSub32, ((((("[33 23] - [21 12] = [12 11] (carry bit was 0)\n[3 2147483647] - [1 2147483648] = [1 4294967295] (carry bit was 1)\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleSub64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleSub64, ((((("[33 23] - [21 12] = [12 11] (carry bit was 0)\n[3 9223372036854775807] - [1 9223372036854775808] = [1 18446744073709551615] (carry bit was 1)\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleMul32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleMul32, ((((("12 * 12 = [0 144]\n2147483648 * 2 = [1 0]\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleMul64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleMul64, ((((("12 * 12 = [0 144]\n9223372036854775808 * 2 = [1 0]\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleDiv32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleDiv32, ((((("[0 6] / 3 = [2 0]\n[2 2147483648] / 2147483648 = [5 0]\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleDiv64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleDiv64, ((((("[0 6] / 3 = [2 0]\n[2 9223372036854775808] / 9223372036854775808 = [5 0]\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLeadingZeros8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLeadingZeros8, ((((("LeadingZeros8(00000001) = 7\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLeadingZeros16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLeadingZeros16, ((((("LeadingZeros16(0000000000000001) = 15\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLeadingZeros32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLeadingZeros32, ((((("LeadingZeros32(00000000000000000000000000000001) = 31\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLeadingZeros64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLeadingZeros64, ((((("LeadingZeros64(0000000000000000000000000000000000000000000000000000000000000001) = 63\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleTrailingZeros8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleTrailingZeros8, ((((("TrailingZeros8(00001110) = 1\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleTrailingZeros16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleTrailingZeros16, ((((("TrailingZeros16(0000000000001110) = 1\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleTrailingZeros32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleTrailingZeros32, ((((("TrailingZeros32(00000000000000000000000000001110) = 1\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleTrailingZeros64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleTrailingZeros64, ((((("TrailingZeros64(0000000000000000000000000000000000000000000000000000000000001110) = 1\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleOnesCount" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleOnesCount, ((((("OnesCount(1110) = 3\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleOnesCount8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleOnesCount8, ((((("OnesCount8(00001110) = 3\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleOnesCount16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleOnesCount16, ((((("OnesCount16(0000000000001110) = 3\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleOnesCount32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleOnesCount32, ((((("OnesCount32(00000000000000000000000000001110) = 3\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleOnesCount64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleOnesCount64, ((((("OnesCount64(0000000000000000000000000000000000000000000000000000000000001110) = 3\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleRotateLeft8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleRotateLeft8, ((((("00001111\n00111100\n11000011\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleRotateLeft16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleRotateLeft16, ((((("0000000000001111\n0000000000111100\n1100000000000011\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleRotateLeft32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleRotateLeft32, ((((("00000000000000000000000000001111\n00000000000000000000000000111100\n11000000000000000000000000000011\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleRotateLeft64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleRotateLeft64, ((((("0000000000000000000000000000000000000000000000000000000000001111\n0000000000000000000000000000000000000000000000000000000000111100\n1100000000000000000000000000000000000000000000000000000000000011\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverse8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverse8, ((((("00010011\n11001000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverse16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverse16, ((((("0000000000010011\n1100100000000000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverse32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverse32, ((((("00000000000000000000000000010011\n11001000000000000000000000000000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverse64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverse64, ((((("0000000000000000000000000000000000000000000000000000000000010011\n1100100000000000000000000000000000000000000000000000000000000000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverseBytes16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverseBytes16, ((((("0000000000001111\n0000111100000000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverseBytes32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverseBytes32, ((((("00000000000000000000000000001111\n00001111000000000000000000000000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleReverseBytes64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleReverseBytes64, ((((("0000000000000000000000000000000000000000000000000000000000001111\n0000111100000000000000000000000000000000000000000000000000000000\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLen8" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLen8, ((((("Len8(00001000) = 4\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLen16" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLen16, ((((("Len16(0000000000001000) = 4\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLen32" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLen32, ((((("Len32(00000000000000000000000000001000) = 4\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample)),
((new stdgo.testing.Testing.InternalExample(((((("ExampleLen64" : GoString))) : GoString)), stdgo.math.bits_test.Bits_test.exampleLen64, ((((("Len64(0000000000000000000000000000000000000000000000000000000000001000) = 4\n" : GoString))) : GoString)), false) : stdgo.testing.Testing.InternalExample))) : Slice<stdgo.testing.Testing.InternalExample>));
function main():Void {
        var _m = stdgo.testing.Testing.mainStart({
            final __self__ = new stdgo.testing.internal.testdeps.Testdeps.TestDeps_wrapper(((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)));
            __self__.checkCorpus = #if !macro function(_vals:Slice<AnyInterface>, _types:Slice<stdgo.reflect.Reflect.Type>):stdgo.Error return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).checkCorpus(_vals, _types) #else null #end;
            __self__.coordinateFuzzing = #if !macro function(_timeout:stdgo.time.Time.Duration, _limit:GoInt64, _minimizeTimeout:stdgo.time.Time.Duration, _minimizeLimit:GoInt64, _parallel:GoInt, _seed:Slice<{ var parent : GoString; var path : GoString; var data : Slice<GoUInt8>; var values : Slice<AnyInterface>; var generation : GoInt; var isSeed : Bool; }>, _types:Slice<stdgo.reflect.Reflect.Type>, _corpusDir:GoString, _cacheDir:GoString):stdgo.Error return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).coordinateFuzzing(_timeout, _limit, _minimizeTimeout, _minimizeLimit, _parallel, _seed, _types, _corpusDir, _cacheDir) #else null #end;
            __self__.importPath = #if !macro function():GoString return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).importPath() #else null #end;
            __self__.matchString = #if !macro function(_pat:GoString, _str:GoString):{ var _0 : Bool; var _1 : stdgo.Error; } return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).matchString(_pat, _str) #else null #end;
            __self__.readCorpus = #if !macro function(_dir:GoString, _types:Slice<stdgo.reflect.Reflect.Type>):{ var _0 : Slice<{ var parent : GoString; var path : GoString; var data : Slice<GoUInt8>; var values : Slice<AnyInterface>; var generation : GoInt; var isSeed : Bool; }>; var _1 : stdgo.Error; } return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).readCorpus(_dir, _types) #else null #end;
            __self__.resetCoverage = #if !macro function():Void ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).resetCoverage() #else null #end;
            __self__.runFuzzWorker = #if !macro function(_fn:({ var parent : GoString; var path : GoString; var data : Slice<GoUInt8>; var values : Slice<AnyInterface>; var generation : GoInt; var isSeed : Bool; }) -> stdgo.Error):stdgo.Error return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).runFuzzWorker(_fn) #else null #end;
            __self__.setPanicOnExit0 = #if !macro function(_v:Bool):Void ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).setPanicOnExit0(_v) #else null #end;
            __self__.snapshotCoverage = #if !macro function():Void ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).snapshotCoverage() #else null #end;
            __self__.startCPUProfile = #if !macro function(_w:stdgo.io.Io.Writer):stdgo.Error return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).startCPUProfile(_w) #else null #end;
            __self__.startTestLog = #if !macro function(_w:stdgo.io.Io.Writer):Void ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).startTestLog(_w) #else null #end;
            __self__.stopCPUProfile = #if !macro function():Void ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).stopCPUProfile() #else null #end;
            __self__.stopTestLog = #if !macro function():stdgo.Error return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).stopTestLog() #else null #end;
            __self__.writeProfileTo = #if !macro function(_name:GoString, _w:stdgo.io.Io.Writer, _debug:GoInt):stdgo.Error return ((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)).writeProfileTo(_name, _w, _debug) #else null #end;
            __self__;
        }, _tests, _benchmarks, _fuzzTargets, _examples);
        Sys.exit(_m.run());
    }
@:keep var _ = {
        try {
            stdgo.testing.internal.testdeps.Testdeps.importPath = ((((("math/bits" : GoString))) : GoString));
        } catch(__exception__) if (__exception__.message != "__return__") throw __exception__;
        true;
    };
