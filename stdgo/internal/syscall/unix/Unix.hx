package stdgo.internal.syscall.unix;
import stdgo.StdGoTypes;
import stdgo.Error;
import stdgo.Go;
import stdgo.GoString;
import stdgo.Pointer;
import stdgo.Slice;
import stdgo.GoArray;
import stdgo.GoMap;
import stdgo.Chan;
function recvfromInet4(_fd:GoInt, _p:Slice<GoByte>, _flags:GoInt, _from:stdgo.syscall.Syscall.SockaddrInet4):{ var _0 : GoInt; var _1 : Error; } return { _0 : ((0 : GoInt)), _1 : ((null : stdgo.Error)) };
function recvfromInet6(_fd:GoInt, _p:Slice<GoByte>, _flags:GoInt, _from:stdgo.syscall.Syscall.SockaddrInet6):{ var _0 : GoInt; var _1 : Error; } return { _0 : ((0 : GoInt)), _1 : ((null : stdgo.Error)) };
function sendtoInet4(_fd:GoInt, _p:Slice<GoByte>, _flags:GoInt, _to:stdgo.syscall.Syscall.SockaddrInet4):Error return ((null : stdgo.Error));
function sendtoInet6(_fd:GoInt, _p:Slice<GoByte>, _flags:GoInt, _to:stdgo.syscall.Syscall.SockaddrInet6):Error return ((null : stdgo.Error));
function sendmsgNInet4(_fd:GoInt, _p:Slice<GoByte>, _oob:Slice<GoByte>, _to:stdgo.syscall.Syscall.SockaddrInet4, _flags:GoInt):{ var _0 : GoInt; var _1 : Error; } return { _0 : ((0 : GoInt)), _1 : ((null : stdgo.Error)) };
function sendmsgNInet6(_fd:GoInt, _p:Slice<GoByte>, _oob:Slice<GoByte>, _to:stdgo.syscall.Syscall.SockaddrInet6, _flags:GoInt):{ var _0 : GoInt; var _1 : Error; } return { _0 : ((0 : GoInt)), _1 : ((null : stdgo.Error)) };
function recvmsgInet4(_fd:GoInt, _p:Slice<GoByte>, _oob:Slice<GoByte>, _flags:GoInt, _from:stdgo.syscall.Syscall.SockaddrInet4):{ var _0 : GoInt; var _1 : GoInt; var _2 : GoInt; var _3 : Error; } return { _0 : ((0 : GoInt)), _1 : ((0 : GoInt)), _2 : ((0 : GoInt)), _3 : ((null : stdgo.Error)) };
function recvmsgInet6(_fd:GoInt, _p:Slice<GoByte>, _oob:Slice<GoByte>, _flags:GoInt, _from:stdgo.syscall.Syscall.SockaddrInet6):{ var _0 : GoInt; var _1 : GoInt; var _2 : GoInt; var _3 : Error; } return { _0 : ((0 : GoInt)), _1 : ((0 : GoInt)), _2 : ((0 : GoInt)), _3 : ((null : stdgo.Error)) };
function isNonblock(_fd:GoInt):{ var _0 : Bool; var _1 : Error; } return { _0 : false, _1 : ((null : stdgo.Error)) };
